#include <stdio.h>
#include <windows.h>

void ArrayInput(int* A, int n)
{
	int i, d;
	for (i = 0; i < n; i++)
	{
		scanf_s("%d", &d);
		A[i] = d;
	}
}

int inCtest(int* C, int q, int w)
{
	int i;
	for (i = 0; i < q; i++)
	{
		if (w == C[i])
		{
			return(1);
		}
	}
	return(0);
}

void ArrayOutput(int* A, int n)
{
	int i;
	for (i = 0; i < n; i++)
	{
		printf("%d\t", A[i]);
	}
	printf("\n");
}

int Intersection(int* A,int* B, int* C, int n, int m)
{
	int i, j, q=0, inC=0;
	for (i = 0; i < n; i++)
	{
		inC = inCtest(C, q, A[i]);
		if (!inC)
		for (j = 0; j < m; j++)
		{
			if (A[i] == B[j])
			{
				C[q] = A[i];
				q++;
				break;
			}
		}
	}
	return(q);
}

void main()
{
	int n, m, min, i, q;
	printf("Enter n \n");
	scanf_s("%d", &n);
	int* A = (int*)malloc(n * sizeof(int));
	ArrayInput(A, n);
	printf("Enter m \n");
	scanf_s("%d", &m);
	int* B = (int*)malloc(m * sizeof(int));
	ArrayInput(B, m);
	if (n > m)
	{
		min = m;
	}
	else
	{
		min = n;
	}
	int* C = (int*)malloc(min * sizeof(int));
	for (i = 0; i < min; i++)
	{
		C[i] = 0;
	}
	q= Intersection(A, B, C, n, m);
	printf("Intersection:\n");
	ArrayOutput(C, q);
}
